#!/usr/bin/python -E
#
#	All options:
#
#	-c					: Get common tag values
#	-t [tags]			: Get value of tags provided
#	-r [regex]			: python re package regular expression string to match tags
#	-R [regex]			: python re package regular expression string to match single tag (override)
# Copyright (C) {2013-2014}  {Louis Fry}
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# Python specific
import os
import sys
sys.path.append('/usr/local/lib/plotdatlib')
import getopt
import re

import plotdat_functions as pdf
import plotdat_strings as pds

optlist = {}						# Options and arguments returned by hp_parse_opts
args = []
fd = None							# file descriptor
header_length = []
header_string = []

# Parse options
optdict,args = pdf.hp_parse_opts(sys.argv[1:])
if optdict == None or args == None:
	sys.exit(-1)

# Handle common mode
if not pdf.get_common:
	header_length,header_string = pdf.header_data(args[0])
	if header_length == None or header_string == None:
		sys.exit(-1)
	
	# Get requested tab values
	tag_matches = pdf.header_tag(header_string)

	# Check for matches
	if tag_matches == []:
		print "No matches to specified tags."
		sys.exit(-1)
	
	# Print the number of header lines
	print header_length
	
	# Print the tag matches found
	for tm in tag_matches:
		t,v = tm[0]
		print "%s=%s" % ("".join(t.strip(":\t").split(" ")),"".join(v.strip("\t").split(" ")))
	sys.exit(0)
else:
	all_tags = []
	com_tags = []
	
	# Go through all passed files
	for f in args:
		
		# Get header string
		header_length, header_string = pdf.header_data(f)
		if header_length == None or header_string == None:
			sys.exit(-1)
		
		# Get all tags
		if pdf.auto:
			all_tags.append(re.findall(pdf.tags_regex,header_string))
		else:
			all_tags.append(pdf.header_tag(header_string)[0]) # hack
	
	# Find keys common to all files and check their values
	tresults = {}
	vresults = {}
	for tagl in all_tags[1:]:
		for tpl in tagl:			# compare all found tags from each header
									# with the tags from the the first header
			try:
				t0,v0 = all_tags[0][tagl.index(tpl)] # first header, tag N
			except IndexError:				# ignore unique tags
				continue
			t,v = tpl
			if t == t0:
				try:
					tresults[t0] += 1
				except KeyError:
					tresults[t0] = 2 # account for reference header
			if v == v0:
				try:
					vresults[t0] += 1
				except KeyError:
					vresults[t0] = 2 # account for reference header
	
	# Find key that the same value in each file
	final = [k for k,v in vresults.items() if v == len(args)]
	if final == []:	# silent error
		sys.exit(-1)
	
	# Print the common values
	for tlist in all_tags[0]:
		t0, v0 = tlist
		if t0 in final:
			print "%s=%s" % (t0,v0)

